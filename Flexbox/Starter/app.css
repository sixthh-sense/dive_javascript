body {
    font-family: 'Exo', sans-serif;
}

h1 {
    text-align: center;
}

#container {
    background-color: #003049;
    width: 90%;
    /* 1200px로 설정하면 공간이 남기도 함(아래는 200px짜리 5개니까 200px이 남음) */
    height: 500px;
    margin: 0 auto;
    border: 5px solid #003049;
    /* flexbox container 내부 요소들은 기본이 좌우정렬? :: main axis 좌우, cross axis 상하 */
    display: flex;
    /* flex-direction :: container 안에서 본축 방향을 결정하는 속성, 기본값은 row, row-reverse는 방향 반대 */
    /* row / row-reverse / column / column-reverse */
    flex-direction: row;
    /* justify-content(정렬 방향):: 주축을 따름 :: (default) flex-start(주축 시작점) / flex-end(주축 끝점) / center(중간) / space-between(바깥쪽 여백 다 없애고 요소간 여백 남김, 여백간 간격은 동일) / space-around(바깥쪽 여백, 요소간 여백 남김, 여백간 간격은 거의 동일) / space-evenly(space-around 속성에 여백간 간격이 동일해짐) */
    /* 강사님은 justify-content 속성명을 main (axis) alignment 같은 걸로 바꾸고 싶어하시나 봄(적어도 그게 더 정확하다고 생각하심) */
    justify-content: flex-start;
    /* flex-wrap은 줄바꿈 허용? :: wrap, wrap-reverse, nowrap*/
    flex-wrap: wrap;
    /* align items :: 교차축을 따라 아이템을 배열 :: flex-start(교차축 시작점, default), flex-end(교차축 끝점), center(중앙 지점), baseline(텍스트 기준선에 맞춰서 요소 정렬 - 글자 밑줄 평평하게 한다는 뜻의 baseline) */
    align-items: center;
}

/* flexbox 하위 요소들은 상위 container 안에 낑겨넣어진다. max height는 500px */
#container div {
    width: 200px;
    height: 200px;
    font-size: 4em;
}